# Default values for fastapiapp.

replicaCount: 1

image:
  repository: docker.io/examjeanlucbernier/datascientestjeanlucbernier
  tag: "override-me"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
securityContext: {}

# Exposition du service (NodePort pour accès depuis le nœud)
service:
  type: NodePort
  port: 80
  nodePort: 30007
  targetPort: 8000

# Port d’écoute de l’app
containerPort: 8000

# Commande/arguments du conteneur (uvicorn)
command: ["uvicorn"]
args:
  - "app.main:app"
  - "--host"
  - "0.0.0.0"
  - "--port"
  - "8000"
  - "--loop"
  - "asyncio"
  - "--workers"
  - "1"

# Variables d’environnement additionnelles (ex: DATABASE_URI)
extraEnv: []
#  - name: DATABASE_URI
#    value: postgresql://user:pass@db.default.svc.cluster.local:5432/dbname

# Probes HTTP sur /api/v1/checkapi (si votre app expose cette route)
probes:
  http:
    enabled: true
    path: /api/v1/checkapi
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  # Variante TCP si vous ne voulez/peut pas exposer une route de santé
  tcp:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
